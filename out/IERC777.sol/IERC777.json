{"abi":[{"type":"function","name":"authorizeOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"burn","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"defaultOperators","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"granularity","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isOperatorFor","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"tokenHolder","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"operatorBurn","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"operatorData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"operatorSend","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"operatorData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"send","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"AuthorizedOperator","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"tokenHolder","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Burned","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"operatorData","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"Minted","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"operatorData","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"RevokedOperator","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"tokenHolder","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Sent","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"operatorData","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"authorizeOperator(address)":"959b8c3f","balanceOf(address)":"70a08231","burn(uint256,bytes)":"fe9d9303","defaultOperators()":"06e48538","granularity()":"556f0dc7","isOperatorFor(address,address)":"d95b6371","name()":"06fdde03","operatorBurn(address,uint256,bytes,bytes)":"fc673c4f","operatorSend(address,address,uint256,bytes,bytes)":"62ad1b83","revokeOperator(address)":"fad8b32a","send(address,uint256,bytes)":"9bd9bbc6","symbol()":"95d89b41","totalSupply()":"18160ddd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {IERC1820Implementer}.\",\"events\":{\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/@openzeppelin/contracts/interfaces/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/@openzeppelin/contracts/interfaces/IERC777.sol\":{\"keccak256\":\"0x4ad6d11d80f69c7dd6d9a8e049f12f0e167776ccd9624441545ec3c128221a24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f771afd17cf7b691597b4151455020344e553c1cbd662f8fcbde708cb26ba90\",\"dweb:/ipfs/QmUbfxb8xngX2uAjci59oUf9KLmW3gC3yPhgYQcbSmiSHF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"tokenHolder","type":"address","indexed":true}],"type":"event","name":"AuthorizedOperator","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"bytes","name":"operatorData","type":"bytes","indexed":false}],"type":"event","name":"Burned","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"bytes","name":"operatorData","type":"bytes","indexed":false}],"type":"event","name":"Minted","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"tokenHolder","type":"address","indexed":true}],"type":"event","name":"RevokedOperator","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"bytes","name":"operatorData","type":"bytes","indexed":false}],"type":"event","name":"Sent","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"authorizeOperator"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"burn"},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultOperators","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"granularity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenHolder","type":"address"}],"stateMutability":"view","type":"function","name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"operatorBurn"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"operatorSend"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeOperator"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"send"},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"authorizeOperator(address)":{"details":"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by an account (`owner`)."},"burn(uint256,bytes)":{"details":"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."},"defaultOperators()":{"details":"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."},"granularity()":{"details":"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."},"isOperatorFor(address,address)":{"details":"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."},"name()":{"details":"Returns the name of the token."},"operatorBurn(address,uint256,bytes,bytes)":{"details":"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."},"operatorSend(address,address,uint256,bytes,bytes)":{"details":"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."},"revokeOperator(address)":{"details":"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."},"send(address,uint256,bytes)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"Returns the amount of tokens in existence."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/@openzeppelin/contracts/interfaces/IERC777.sol":"IERC777"},"evmVersion":"paris","libraries":{}},"sources":{"src/@openzeppelin/contracts/interfaces/IERC777.sol":{"keccak256":"0x4ad6d11d80f69c7dd6d9a8e049f12f0e167776ccd9624441545ec3c128221a24","urls":["bzz-raw://8f771afd17cf7b691597b4151455020344e553c1cbd662f8fcbde708cb26ba90","dweb:/ipfs/QmUbfxb8xngX2uAjci59oUf9KLmW3gC3yPhgYQcbSmiSHF"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/@openzeppelin/contracts/interfaces/IERC777.sol","id":89369,"exportedSymbols":{"IERC777":[89368]},"nodeType":"SourceUnit","src":"106:6624:197","nodes":[{"id":89207,"nodeType":"PragmaDirective","src":"106:24:197","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":89368,"nodeType":"ContractDefinition","src":"506:6223:197","nodes":[{"id":89221,"nodeType":"EventDefinition","src":"734:107:197","nodes":[],"anonymous":false,"documentation":{"id":89209,"nodeType":"StructuredDocumentation","src":"530:199:197","text":" @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n Note that some additional user `data` and `operatorData` can be logged in the event."},"eventSelector":"2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d","name":"Minted","nameLocation":"740:6:197","parameters":{"id":89220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89211,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"763:8:197","nodeType":"VariableDeclaration","scope":89221,"src":"747:24:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89210,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89213,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"789:2:197","nodeType":"VariableDeclaration","scope":89221,"src":"773:18:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89212,"name":"address","nodeType":"ElementaryTypeName","src":"773:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89215,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"801:6:197","nodeType":"VariableDeclaration","scope":89221,"src":"793:14:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89214,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:197","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89217,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"815:4:197","nodeType":"VariableDeclaration","scope":89221,"src":"809:10:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":89216,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":89219,"indexed":false,"mutability":"mutable","name":"operatorData","nameLocation":"827:12:197","nodeType":"VariableDeclaration","scope":89221,"src":"821:18:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":89218,"name":"bytes","nodeType":"ElementaryTypeName","src":"821:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"746:94:197"}},{"id":89234,"nodeType":"EventDefinition","src":"1039:109:197","nodes":[],"anonymous":false,"documentation":{"id":89222,"nodeType":"StructuredDocumentation","src":"847:187:197","text":" @dev Emitted when `operator` destroys `amount` tokens from `account`.\n Note that some additional user `data` and `operatorData` can be logged in the event."},"eventSelector":"a78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098","name":"Burned","nameLocation":"1045:6:197","parameters":{"id":89233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89224,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1068:8:197","nodeType":"VariableDeclaration","scope":89234,"src":"1052:24:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89223,"name":"address","nodeType":"ElementaryTypeName","src":"1052:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89226,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1094:4:197","nodeType":"VariableDeclaration","scope":89234,"src":"1078:20:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89225,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89228,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1108:6:197","nodeType":"VariableDeclaration","scope":89234,"src":"1100:14:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1100:7:197","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89230,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1122:4:197","nodeType":"VariableDeclaration","scope":89234,"src":"1116:10:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":89229,"name":"bytes","nodeType":"ElementaryTypeName","src":"1116:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":89232,"indexed":false,"mutability":"mutable","name":"operatorData","nameLocation":"1134:12:197","nodeType":"VariableDeclaration","scope":89234,"src":"1128:18:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":89231,"name":"bytes","nodeType":"ElementaryTypeName","src":"1128:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1051:96:197"}},{"id":89241,"nodeType":"EventDefinition","src":"1242:80:197","nodes":[],"anonymous":false,"documentation":{"id":89235,"nodeType":"StructuredDocumentation","src":"1154:83:197","text":" @dev Emitted when `operator` is made operator for `tokenHolder`."},"eventSelector":"f4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9","name":"AuthorizedOperator","nameLocation":"1248:18:197","parameters":{"id":89240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89237,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1283:8:197","nodeType":"VariableDeclaration","scope":89241,"src":"1267:24:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89236,"name":"address","nodeType":"ElementaryTypeName","src":"1267:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89239,"indexed":true,"mutability":"mutable","name":"tokenHolder","nameLocation":"1309:11:197","nodeType":"VariableDeclaration","scope":89241,"src":"1293:27:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89238,"name":"address","nodeType":"ElementaryTypeName","src":"1293:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1266:55:197"}},{"id":89248,"nodeType":"EventDefinition","src":"1430:77:197","nodes":[],"anonymous":false,"documentation":{"id":89242,"nodeType":"StructuredDocumentation","src":"1328:97:197","text":" @dev Emitted when `operator` is revoked its operator status for `tokenHolder`."},"eventSelector":"50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1","name":"RevokedOperator","nameLocation":"1436:15:197","parameters":{"id":89247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89244,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1468:8:197","nodeType":"VariableDeclaration","scope":89248,"src":"1452:24:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89243,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89246,"indexed":true,"mutability":"mutable","name":"tokenHolder","nameLocation":"1494:11:197","nodeType":"VariableDeclaration","scope":89248,"src":"1478:27:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89245,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1451:55:197"}},{"id":89254,"nodeType":"FunctionDefinition","src":"1572:54:197","nodes":[],"documentation":{"id":89249,"nodeType":"StructuredDocumentation","src":"1513:54:197","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"1581:4:197","parameters":{"id":89250,"nodeType":"ParameterList","parameters":[],"src":"1585:2:197"},"returnParameters":{"id":89253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89254,"src":"1611:13:197","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":89251,"name":"string","nodeType":"ElementaryTypeName","src":"1611:6:197","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1610:15:197"},"scope":89368,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":89260,"nodeType":"FunctionDefinition","src":"1739:56:197","nodes":[],"documentation":{"id":89255,"nodeType":"StructuredDocumentation","src":"1632:102:197","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1748:6:197","parameters":{"id":89256,"nodeType":"ParameterList","parameters":[],"src":"1754:2:197"},"returnParameters":{"id":89259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89260,"src":"1780:13:197","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":89257,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:197","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:197"},"scope":89368,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":89266,"nodeType":"FunctionDefinition","src":"2093:55:197","nodes":[],"documentation":{"id":89261,"nodeType":"StructuredDocumentation","src":"1801:287:197","text":" @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."},"functionSelector":"556f0dc7","implemented":false,"kind":"function","modifiers":[],"name":"granularity","nameLocation":"2102:11:197","parameters":{"id":89262,"nodeType":"ParameterList","parameters":[],"src":"2113:2:197"},"returnParameters":{"id":89265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89266,"src":"2139:7:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2139:7:197","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2138:9:197"},"scope":89368,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":89272,"nodeType":"FunctionDefinition","src":"2225:55:197","nodes":[],"documentation":{"id":89267,"nodeType":"StructuredDocumentation","src":"2154:66:197","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2234:11:197","parameters":{"id":89268,"nodeType":"ParameterList","parameters":[],"src":"2245:2:197"},"returnParameters":{"id":89271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89272,"src":"2271:7:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:197","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2270:9:197"},"scope":89368,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":89280,"nodeType":"FunctionDefinition","src":"2374:66:197","nodes":[],"documentation":{"id":89273,"nodeType":"StructuredDocumentation","src":"2286:83:197","text":" @dev Returns the amount of tokens owned by an account (`owner`)."},"functionSelector":"70a08231","implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2383:9:197","parameters":{"id":89276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89275,"mutability":"mutable","name":"owner","nameLocation":"2401:5:197","nodeType":"VariableDeclaration","scope":89280,"src":"2393:13:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89274,"name":"address","nodeType":"ElementaryTypeName","src":"2393:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2392:15:197"},"returnParameters":{"id":89279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89280,"src":"2431:7:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2431:7:197","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:9:197"},"scope":89368,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":89290,"nodeType":"FunctionDefinition","src":"3036:79:197","nodes":[],"documentation":{"id":89281,"nodeType":"StructuredDocumentation","src":"2446:585:197","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."},"functionSelector":"9bd9bbc6","implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"3045:4:197","parameters":{"id":89288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89283,"mutability":"mutable","name":"recipient","nameLocation":"3058:9:197","nodeType":"VariableDeclaration","scope":89290,"src":"3050:17:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89282,"name":"address","nodeType":"ElementaryTypeName","src":"3050:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89285,"mutability":"mutable","name":"amount","nameLocation":"3077:6:197","nodeType":"VariableDeclaration","scope":89290,"src":"3069:14:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89284,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:197","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89287,"mutability":"mutable","name":"data","nameLocation":"3100:4:197","nodeType":"VariableDeclaration","scope":89290,"src":"3085:19:197","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":89286,"name":"bytes","nodeType":"ElementaryTypeName","src":"3085:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3049:56:197"},"returnParameters":{"id":89289,"nodeType":"ParameterList","parameters":[],"src":"3114:0:197"},"scope":89368,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":89298,"nodeType":"FunctionDefinition","src":"3530:60:197","nodes":[],"documentation":{"id":89291,"nodeType":"StructuredDocumentation","src":"3121:404:197","text":" @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."},"functionSelector":"fe9d9303","implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"3539:4:197","parameters":{"id":89296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89293,"mutability":"mutable","name":"amount","nameLocation":"3552:6:197","nodeType":"VariableDeclaration","scope":89298,"src":"3544:14:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89292,"name":"uint256","nodeType":"ElementaryTypeName","src":"3544:7:197","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89295,"mutability":"mutable","name":"data","nameLocation":"3575:4:197","nodeType":"VariableDeclaration","scope":89298,"src":"3560:19:197","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":89294,"name":"bytes","nodeType":"ElementaryTypeName","src":"3560:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3543:37:197"},"returnParameters":{"id":89297,"nodeType":"ParameterList","parameters":[],"src":"3589:0:197"},"scope":89368,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":89308,"nodeType":"FunctionDefinition","src":"3850:91:197","nodes":[],"documentation":{"id":89299,"nodeType":"StructuredDocumentation","src":"3596:249:197","text":" @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."},"functionSelector":"d95b6371","implemented":false,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"3859:13:197","parameters":{"id":89304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89301,"mutability":"mutable","name":"operator","nameLocation":"3881:8:197","nodeType":"VariableDeclaration","scope":89308,"src":"3873:16:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89300,"name":"address","nodeType":"ElementaryTypeName","src":"3873:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89303,"mutability":"mutable","name":"tokenHolder","nameLocation":"3899:11:197","nodeType":"VariableDeclaration","scope":89308,"src":"3891:19:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89302,"name":"address","nodeType":"ElementaryTypeName","src":"3891:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3872:39:197"},"returnParameters":{"id":89307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89308,"src":"3935:4:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":89305,"name":"bool","nodeType":"ElementaryTypeName","src":"3935:4:197","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3934:6:197"},"scope":89368,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":89314,"nodeType":"FunctionDefinition","src":"4185:54:197","nodes":[],"documentation":{"id":89309,"nodeType":"StructuredDocumentation","src":"3947:233:197","text":" @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."},"functionSelector":"959b8c3f","implemented":false,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"4194:17:197","parameters":{"id":89312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89311,"mutability":"mutable","name":"operator","nameLocation":"4220:8:197","nodeType":"VariableDeclaration","scope":89314,"src":"4212:16:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89310,"name":"address","nodeType":"ElementaryTypeName","src":"4212:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4211:18:197"},"returnParameters":{"id":89313,"nodeType":"ParameterList","parameters":[],"src":"4238:0:197"},"scope":89368,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":89320,"nodeType":"FunctionDefinition","src":"4511:51:197","nodes":[],"documentation":{"id":89315,"nodeType":"StructuredDocumentation","src":"4245:261:197","text":" @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."},"functionSelector":"fad8b32a","implemented":false,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"4520:14:197","parameters":{"id":89318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89317,"mutability":"mutable","name":"operator","nameLocation":"4543:8:197","nodeType":"VariableDeclaration","scope":89320,"src":"4535:16:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89316,"name":"address","nodeType":"ElementaryTypeName","src":"4535:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4534:18:197"},"returnParameters":{"id":89319,"nodeType":"ParameterList","parameters":[],"src":"4561:0:197"},"scope":89368,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":89327,"nodeType":"FunctionDefinition","src":"4911:69:197","nodes":[],"documentation":{"id":89321,"nodeType":"StructuredDocumentation","src":"4568:338:197","text":" @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."},"functionSelector":"06e48538","implemented":false,"kind":"function","modifiers":[],"name":"defaultOperators","nameLocation":"4920:16:197","parameters":{"id":89322,"nodeType":"ParameterList","parameters":[],"src":"4936:2:197"},"returnParameters":{"id":89326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89327,"src":"4962:16:197","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":89323,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":89324,"nodeType":"ArrayTypeName","src":"4962:9:197","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4961:18:197"},"scope":89368,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":89341,"nodeType":"FunctionDefinition","src":"5705:178:197","nodes":[],"documentation":{"id":89328,"nodeType":"StructuredDocumentation","src":"4986:714:197","text":" @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."},"functionSelector":"62ad1b83","implemented":false,"kind":"function","modifiers":[],"name":"operatorSend","nameLocation":"5714:12:197","parameters":{"id":89339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89330,"mutability":"mutable","name":"sender","nameLocation":"5744:6:197","nodeType":"VariableDeclaration","scope":89341,"src":"5736:14:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89329,"name":"address","nodeType":"ElementaryTypeName","src":"5736:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89332,"mutability":"mutable","name":"recipient","nameLocation":"5768:9:197","nodeType":"VariableDeclaration","scope":89341,"src":"5760:17:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89331,"name":"address","nodeType":"ElementaryTypeName","src":"5760:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89334,"mutability":"mutable","name":"amount","nameLocation":"5795:6:197","nodeType":"VariableDeclaration","scope":89341,"src":"5787:14:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89333,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:197","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89336,"mutability":"mutable","name":"data","nameLocation":"5826:4:197","nodeType":"VariableDeclaration","scope":89341,"src":"5811:19:197","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":89335,"name":"bytes","nodeType":"ElementaryTypeName","src":"5811:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":89338,"mutability":"mutable","name":"operatorData","nameLocation":"5855:12:197","nodeType":"VariableDeclaration","scope":89341,"src":"5840:27:197","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":89337,"name":"bytes","nodeType":"ElementaryTypeName","src":"5840:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5726:147:197"},"returnParameters":{"id":89340,"nodeType":"ParameterList","parameters":[],"src":"5882:0:197"},"scope":89368,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":89353,"nodeType":"FunctionDefinition","src":"6426:114:197","nodes":[],"documentation":{"id":89342,"nodeType":"StructuredDocumentation","src":"5889:532:197","text":" @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."},"functionSelector":"fc673c4f","implemented":false,"kind":"function","modifiers":[],"name":"operatorBurn","nameLocation":"6435:12:197","parameters":{"id":89351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89344,"mutability":"mutable","name":"account","nameLocation":"6456:7:197","nodeType":"VariableDeclaration","scope":89353,"src":"6448:15:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89343,"name":"address","nodeType":"ElementaryTypeName","src":"6448:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89346,"mutability":"mutable","name":"amount","nameLocation":"6473:6:197","nodeType":"VariableDeclaration","scope":89353,"src":"6465:14:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6465:7:197","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89348,"mutability":"mutable","name":"data","nameLocation":"6496:4:197","nodeType":"VariableDeclaration","scope":89353,"src":"6481:19:197","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":89347,"name":"bytes","nodeType":"ElementaryTypeName","src":"6481:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":89350,"mutability":"mutable","name":"operatorData","nameLocation":"6517:12:197","nodeType":"VariableDeclaration","scope":89353,"src":"6502:27:197","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":89349,"name":"bytes","nodeType":"ElementaryTypeName","src":"6502:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6447:83:197"},"returnParameters":{"id":89352,"nodeType":"ParameterList","parameters":[],"src":"6539:0:197"},"scope":89368,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":89367,"nodeType":"EventDefinition","src":"6546:181:197","nodes":[],"anonymous":false,"eventSelector":"06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987","name":"Sent","nameLocation":"6552:4:197","parameters":{"id":89366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89355,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6582:8:197","nodeType":"VariableDeclaration","scope":89367,"src":"6566:24:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89354,"name":"address","nodeType":"ElementaryTypeName","src":"6566:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89357,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"6616:4:197","nodeType":"VariableDeclaration","scope":89367,"src":"6600:20:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89356,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89359,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"6646:2:197","nodeType":"VariableDeclaration","scope":89367,"src":"6630:18:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89358,"name":"address","nodeType":"ElementaryTypeName","src":"6630:7:197","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89361,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6666:6:197","nodeType":"VariableDeclaration","scope":89367,"src":"6658:14:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89360,"name":"uint256","nodeType":"ElementaryTypeName","src":"6658:7:197","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89363,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"6688:4:197","nodeType":"VariableDeclaration","scope":89367,"src":"6682:10:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":89362,"name":"bytes","nodeType":"ElementaryTypeName","src":"6682:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":89365,"indexed":false,"mutability":"mutable","name":"operatorData","nameLocation":"6708:12:197","nodeType":"VariableDeclaration","scope":89367,"src":"6702:18:197","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":89364,"name":"bytes","nodeType":"ElementaryTypeName","src":"6702:5:197","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6556:170:197"}}],"abstract":false,"baseContracts":[],"canonicalName":"IERC777","contractDependencies":[],"contractKind":"interface","documentation":{"id":89208,"nodeType":"StructuredDocumentation","src":"132:373:197","text":" @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {IERC1820Implementer}."},"fullyImplemented":false,"linearizedBaseContracts":[89368],"name":"IERC777","nameLocation":"516:7:197","scope":89369,"usedErrors":[],"usedEvents":[89221,89234,89241,89248,89367]}],"license":"MIT"},"id":197}