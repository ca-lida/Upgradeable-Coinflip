{"abi":[{"type":"function","name":"onTransferReceived","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onTransferReceived(address,address,uint256,bytes)":"88a7ca5c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support {IERC1363-transferAndCall} or {IERC1363-transferFromAndCall} from {ERC1363} token contracts.\",\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.\",\"params\":{\"amount\":\"uint256 The amount of tokens transferred\",\"data\":\"bytes Additional data with no specified format\",\"from\":\"address The address which are token transferred from\",\"operator\":\"address The address which called `transferAndCall` or `transferFromAndCall` function\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` unless throwing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of ERC1363 tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":\"IERC1363Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0x1b0503c0f676f61866e76acf7905dc98d35503b9f4ef5c62d4e86f8ff070f1c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9c9c632db6132254b0d7a89f612a459f53056b9d8b31c19dbb57673a17ef294\",\"dweb:/ipfs/QmaRPuGcrWp4Ye9vrw1xkgRiVJasNAJxF7x8QAFMvsXfnC\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onTransferReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]}],"devdoc":{"kind":"dev","methods":{"onTransferReceived(address,address,uint256,bytes)":{"details":"Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.","params":{"amount":"uint256 The amount of tokens transferred","data":"bytes Additional data with no specified format","from":"address The address which are token transferred from","operator":"address The address which called `transferAndCall` or `transferFromAndCall` function"},"returns":{"_0":"`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing"}}},"version":1},"userdoc":{"kind":"user","methods":{"onTransferReceived(address,address,uint256,bytes)":{"notice":"Handle the receipt of ERC1363 tokens"}},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/@openzeppelin/contracts/interfaces/IERC1363Receiver.sol":"IERC1363Receiver"},"evmVersion":"paris","libraries":{}},"sources":{"src/@openzeppelin/contracts/interfaces/IERC1363Receiver.sol":{"keccak256":"0x1b0503c0f676f61866e76acf7905dc98d35503b9f4ef5c62d4e86f8ff070f1c8","urls":["bzz-raw://f9c9c632db6132254b0d7a89f612a459f53056b9d8b31c19dbb57673a17ef294","dweb:/ipfs/QmaRPuGcrWp4Ye9vrw1xkgRiVJasNAJxF7x8QAFMvsXfnC"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/@openzeppelin/contracts/interfaces/IERC1363Receiver.sol","id":88675,"exportedSymbols":{"IERC1363Receiver":[88674]},"nodeType":"SourceUnit","src":"115:1391:173","nodes":[{"id":88658,"nodeType":"PragmaDirective","src":"115:24:173","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":88674,"nodeType":"ContractDefinition","src":"302:1203:173","nodes":[{"id":88673,"nodeType":"FunctionDefinition","src":"1344:159:173","nodes":[],"documentation":{"id":88660,"nodeType":"StructuredDocumentation","src":"514:825:173","text":" @notice Handle the receipt of ERC1363 tokens\n @dev Any ERC1363 smart contract calls this function on the recipient\n after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n @param from address The address which are token transferred from\n @param amount uint256 The amount of tokens transferred\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing"},"functionSelector":"88a7ca5c","implemented":false,"kind":"function","modifiers":[],"name":"onTransferReceived","nameLocation":"1353:18:173","parameters":{"id":88669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88662,"mutability":"mutable","name":"operator","nameLocation":"1389:8:173","nodeType":"VariableDeclaration","scope":88673,"src":"1381:16:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":88661,"name":"address","nodeType":"ElementaryTypeName","src":"1381:7:173","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":88664,"mutability":"mutable","name":"from","nameLocation":"1415:4:173","nodeType":"VariableDeclaration","scope":88673,"src":"1407:12:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":88663,"name":"address","nodeType":"ElementaryTypeName","src":"1407:7:173","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":88666,"mutability":"mutable","name":"amount","nameLocation":"1437:6:173","nodeType":"VariableDeclaration","scope":88673,"src":"1429:14:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:173","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":88668,"mutability":"mutable","name":"data","nameLocation":"1466:4:173","nodeType":"VariableDeclaration","scope":88673,"src":"1453:17:173","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":88667,"name":"bytes","nodeType":"ElementaryTypeName","src":"1453:5:173","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1371:105:173"},"returnParameters":{"id":88672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":88673,"src":"1495:6:173","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":88670,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1495:6:173","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1494:8:173"},"scope":88674,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC1363Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":88659,"nodeType":"StructuredDocumentation","src":"141:160:173","text":" @dev Interface for any contract that wants to support {IERC1363-transferAndCall}\n or {IERC1363-transferFromAndCall} from {ERC1363} token contracts."},"fullyImplemented":false,"linearizedBaseContracts":[88674],"name":"IERC1363Receiver","nameLocation":"312:16:173","scope":88675,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":173}